name: Build Executables

on:
  push:
    branches:
      - main
    paths:
      - "installer/**"
      - "pyproject.toml"
      - "buildozer.spec"
      - ".github/workflows/build-exe.yml"
  pull_request:
    paths:
      - "installer/**"
      - "pyproject.toml"
      - "buildozer.spec"
      - ".github/workflows/build-exe.yml"

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          pip install -r installer-requirements.txt
          pip install pyinstaller

      - name: Build Windows Executable
        run: |
          pyinstaller --onefile --name app_windows.exe installer/run.py

      - name: Upload Windows Executable
        uses: actions/upload-artifact@v4
        with:
          name: windows-exe
          path: dist/app_windows.exe

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          pip install -r installer-requirements.txt
          pip install pyinstaller

      - name: Build Linux Executable
        run: |
          pyinstaller --onefile --name app_linux installer/run.py

      - name: Upload Linux Executable
        uses: actions/upload-artifact@v4
        with:
          name: linux-app
          path: dist/app_linux

  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
  
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
  
      - name: ðŸ“¦ Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y zip unzip curl openjdk-17-jdk libncurses-dev libtinfo-dev

      - name: ðŸ“¥ Install python-for-android
        run: |
          python -m pip install --upgrade pip
          pip install python-for-android

      - name: ðŸ“¥ Install Android SDK & NDK
        run: |
          export ANDROID_HOME=$HOME/android-sdk
          mkdir -p $ANDROID_HOME/cmdline-tools/latest
          curl -o sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip
          unzip sdk-tools.zip -d $ANDROID_HOME/cmdline-tools/latest
          rm sdk-tools.zip

      - name: ðŸ”§ Set Environment Variables
        run: |
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_HOME/emulator" >> $GITHUB_PATH

      - name: ðŸ“¦ Accept Licenses & Install Build Tools
        run: |
          sdkmanager --version  # Check if sdkmanager works
          yes | sdkmanager --sdk_root=$ANDROID_HOME --licenses
          sdkmanager --sdk_root=$ANDROID_HOME "platform-tools" "platforms;android-31" "build-tools;31.0.0" "ndk;25.1.8937393"

      - name: ðŸš€ Build APK using python-for-android
        run: |
          export ANDROID_HOME=$HOME/android-sdk
          p4a apk --private . --package=org.example.pythonos --name "PythonOS" --version 1.0 --bootstrap=sdl2 --requirements=python3,kivy --sdk_dir=$ANDROID_HOME --ndk_dir=$ANDROID_HOME/ndk/25.1.8937393
          
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: PythonOS-Android
          path: bin/*.apk
