name: Build Executables

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install -r installer-requirements.txt
          pip install pyinstaller

      - name: Build Windows Executable
        run: |
          pyinstaller --onefile --name app_windows.exe installer/run.py

      - name: Upload Windows Executable
        uses: actions/upload-artifact@v4
        with:
          name: windows-exe
          path: dist/app_windows.exe

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install -r installer-requirements.txt
          pip install pyinstaller

      - name: Build Linux Executable
        run: |
          pyinstaller --onefile --name app_linux installer/run.py

      - name: Upload Linux Executable
        uses: actions/upload-artifact@v4
        with:
          name: linux-app
          path: dist/app_linux

  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
  
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
  
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y zip unzip libncurses-dev libtinfo-dev
          pip install --upgrade pip
          pip install cython buildozer
  
      - name: Install Android SDK and Accept Licenses
        run: |
          sudo mkdir -p /opt/android-sdk/cmdline-tools
          sudo wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O sdk-tools.zip
          sudo unzip sdk-tools.zip -d /opt/android-sdk/cmdline-tools
          sudo mv /opt/android-sdk/cmdline-tools/cmdline-tools /opt/android-sdk/cmdline-tools/latest
          sudo rm sdk-tools.zip
          export ANDROID_HOME=/opt/android-sdk
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/36.0.0:$PATH
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "build-tools;36.0.0" "platforms;android-31"
  
      - name: Verify AIDL Installation
        run: |
          export ANDROID_HOME=$HOME/android-sdk
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/36.0.0:$PATH
          if ! command -v aidl &> /dev/null; then
            echo "AIDL is missing! Checking build-tools..."
            ls $ANDROID_HOME/build-tools/
            echo "Checking for aidl in build-tools..."
            find $ANDROID_HOME/build-tools -name "aidl"
            exit 1
          else
            echo "AIDL found!"
          fi
      
      - name: Install Python dependencies
        run: |
          pip install -r installer-requirements.txt
  
      - name: Build Android APK
        run: |
          buildozer -v android debug
  
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: PythonOS-Android
          path: bin/*.apk